
CD-HIT-OTU
OTU package for illumina-based rRNA sequences

written by Sitao Wu, Weizhong Li
10/5/2011

http://weizhongli-lab.org/cd-hit-otu


====================== INSTALLATION ====================
CD-HIT-OTU works under Linux systems

(1) Download software from http://weizhongli-lab.org/cd-hit-otu like cd-hit-otu-illumina-0.0.1-2011-1004.tar.gz
(2) Decompress it by command:
        tar zxvf cd-hit-otu-illumina-0.0.1-2011-1004.tar
    This will create a new directory like cd-hit-otu-illumina-0.0.1
(3) enter this new directory, and then enter cd-hit directory (e.g. cd-hit-v4.5.5-2011-03-31)
    This directory contains cd-hit package, you need to compile cd-hit by
        (a) make openmp=yes
        (b) make
        here (a) generates a multiple-threaded version of cd-hit and (b) generates regular cd-hit

    cd-hit is a package we developed, and it is regularly updated, you can check newer package
        at http://cd-hit.org or updates 
(4) enter cdhit-dup directory (e.g. cd-hit-dup-0.0.1-2011-09-30)
    This directory contains cdhit-dup tool, you need to compile it by 
    make


====================== USER GUIDE ==========================
There are few examples with this package, please enter example directory

-------------------------------
Step 0, requirements of input
-------------------------------
    cd-hit-otu (Illumina version for pair-end reads)
    starts with two FASTQ format files containing the rRNA tags.

    Barcodes should be removed. All the tags must start at 5' with the 
    same rRNA primer shared by all rRNA genes (rare wrong base calls or 
    small variations are ok - we will do filter and trim anyway).

    The common primers make sure all the sequences align at 5' during the clustering analysis. 
    So, it is important for accuracy.


====================== One script call ==========================
Please enter the examples directory. Read the README files if exist

You can run OTU analysis by command such as:
        ../cd-hit-otu-all-pair.pl -i C1_1.fastq,C1_2.fastq -o C1-dir -t 125,125 -p 6,6 -c 0.97 -m true -e 0.01


Use command without parameters to see the description of these parameters:
        ../cd-hit-otu-all-pair.pl

-i input fastq files
-o output dir
-t trim_cutoff, default 1.0,1.0 (means no trimming)
        if cutoff is a integer number > 1 (like 200), the program will trim reads to this length
        if cutoff is a fraction (like 0.8), the program will trim reads to its length times this fraction
-p prefix-length/primers_file default 6,6
        if a primers_file is provided,
          read primers from this file, remove the reads don't match the primers
        if a prefix-length (a digit number) is provided
          get the consensus of prefix of the all reads
          remove the reads without this consensus
-c OTU cutoff default 0.97
-m whether to perform chimera checking (true/false), default true
-e per-base PCR error, default 0.01

Here, -i, -t, -p need two parameters seperated by "," like 
  -i file-1.fastq,file-2.fastq
  -t 1.0,1.0
  -p 6,6

format of primer_file, each line is a primer sequence, where [AT] mean either A or T
AGTGCGTAGTG[ACTG]CAGC[AC]GCCGCGGTAA

===================== How to choose parameters ======================

-t trim_cutoff
  If the quality of reads are very bad at the tail, you should trim the tails for all reads.
  You can scan the quality by using 
     ../cd-hit-otu-filter.pl -i input-1.fastq,input-2.fastq -P 1 -o input-1-filter,input-2-filter -t 1.0,1.0
  Then check files "input-1-filter.err" and "input-2-filter.err". 
  These files list the average quality score & error probability.
  For example, if you have 100bp reads, and if you see the quality scores drop significantly
  at the last 10 bp, you should trim them off - use "-t 90,90".

-e PCR per-base error rate
  use the default 0.01 unless you have strong reason (e.g. by control study) that your data
  has lower or higher than the default PCR error rate. 

==================== Results =============================
All the output files will be in directory like Even1.1-dir
        OTU.clstr is OTU cluster that only contains the representatives of denoised and non-chimeric clusters
        OTU.nr2nd.clstr is OTU clusters that also contain sequences from non-chimeric primary and secondary clusters.
           In this file, the number of reads in each OTU cluster can represents the abundance of that OTU


Good luck,
==========




